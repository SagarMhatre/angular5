## Notes : 

Install node ( npm is bundled with node) - https://nodejs.org/en/download/

## cmd ------------------------------------------------------
\Workspace\angular>node -v
\Workspace\angular>npm install @angular/cli -g
\Workspace\angular>ng -v
\Workspace\angular>ng new angular5
\Workspace\angular>cd angular5
\Workspace\angular\angular5>ng serve -o
----------------------------------------------------------

Browser - http://localhost:4200/

Create a repository on Github

## git bash ------------------------------------------------------
Laptop@LAPTOP-AE1T2HG9 MINGW64 ~/Documents/Workspace/angular/angular5
$ git --version
git version 2.16.1.windows.1

$ git init
$ git remote add origin https://github.com/SagarMhatre/angular5.git
$ git push -u origin master
---------------------------------------------------------------

## VSCode ------------------------------------------------------
Open the folder in VSCode 
Ctrl+Shift+G
... > Publish Branch

When more code is changed,
Ctrl+Shift+G
Press the + button to stage the changes
... > Commit All (Enter Message)
... > Publish Branch
---------------------------------------------------------------
Adding an Interface
Interfaces are used to type-check whether an object fits a certain structure. 
Basic Types (which can be used in an interface) - http://www.typescriptlang.org/docs/handbook/basic-types.html
\Workspace\angular\angular5>ng g i Employee
---------------------------------------------------------------
Adding a Service

\Workspace\angular\angular5>ng g s EmployeeService
Add your members & methods in the ts file generated

Declaring variables :
import <type> from '<path to it's .ts file>'
<access modifier> <var-name> : <type> = <value>
---------------------------------------------------------------
Register the service in app.module.ts 
import {<service-name>} from '<path to it's .ts file>'
providers :[<service-name>]
---------------------------------------------------------------
Adding a new component
\Workspace\angular\angular5>ng g c EmployeeList
---------------------------------------------------------------
Adding Service as dependency in the component that uses the Service
import <service> from '<path to it's .ts file>'
constructor (private _var : <service>) { ...
---------------------------------------------------------------
Two way binding
Add the FormsModule - This is required for the ngModel directive 
that provides two way binding between events & data (interpolation)
in app.module.ts
    import { FormsModule } from '@angular/forms';
    imports: [ FormsModule ,...
then, in the component ,
[(ngModel)]="<var-name>"
---------------------------------------------------------------
Adding recods to array
Use the push method to add records to an array
---------------------------------------------------------------
Adding routing
In an existing app ,
    in src\index.html
        <base href = "/">
    create file app/app.routing.modules.ts with below contents
        import { NgModule } from '@angular/core';
        import { Routes, RouterModule } from '@angular/router';

        const routes: Routes = [];

        @NgModule({
        imports: [RouterModule.forRoot(routes)],
        exports: [RouterModule]
        })
        export class AppRoutingModule { }
    in src\app\app.module.ts
        import { AppRoutingModule } from './app-routing.module';
        imports: [    AppRoutingModule ...
    in the app.component.html
        <router-outlet></router-outlet>
In a new App,
    \Workspace\angular>ng new routing-app --routing
---------------------------------------------------------------
Creating  routes to components
    import the components
    add path - component mapping to the routes const array
        const routes: Routes = [ {path:"<path>" , component : <component-name> }, ... 
    in the app.component.html, remove all the other tags except the below
        <router-outlet></router-outlet>
Navigate to http://localhost:4200/<path>
---------------------------------------------------------------
Navigation links
<a routerLink="/<path>"> Link-Text </a>
---------------------------------------------------------------
Programmatic Navigation in components
import {Router} from "@angular/router";
add it as dependency in the constructor
    constructor(private _router: Router ...
this._router.navigate(['<path>'])
---------------------------------------------------------------
Generating component with Inline Template
\Workspace\angular\angular5>ng g c employee-edit -it
---------------------------------------------------------------
Accessing index of an entry in array
<div *ngFor = "let employee of employees; index as i" >
    <a routerLink="/edit/{{i}}">  {{employee.id}} </a>
</div>
---------------------------------------------------------------
Adding a route with parameter (id)
import the component
Routes = [{ path : '<path>/:id' , component : <component-name> }]
---------------------------------------------------------------
To Access Parameter in the route
	import { ActivatedRoute } from '@angular/router';
	constructor( private _route : ActivatedRoute 
	this.id = parseInt(this._route.snapshot.paramMap.get('id'));
---------------------------------------------------------------